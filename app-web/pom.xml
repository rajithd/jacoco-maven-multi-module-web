<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.simonsaysblog.examples.it-ut-jacoco-sonar</groupId>
        <artifactId>parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>app-web</artifactId>
    <name>integration tests for application web</name>
    <description>contains integration tests under test directory</description>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>1.7.2</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>app</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>
    <!--
    This module sets up jacoco's agent in pre-integration-phase
    and executes tests using maven-failsafe-plugin in integration-test phase.

    Jacoco's outcome goes to PARENT_TARGET/jacoco-it.exec

    Parent project is configured to look for such a file.
    -->
    <build>
        <testSourceDirectory>${project.basedir}/src/test</testSourceDirectory>
        <testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.14.1</version>
                <configuration>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${basedir}/src/test/resources/jetty-resources/classpath_resources
                        </additionalClasspathElement>
                    </additionalClasspathElements>
                    <!--If u need to set values with credentials for connection to jetty in your tests, use this node.
                    And these properties should be read in tests as System.getProperty -->
                    <!--<systemPropertyVariables>
                        <RestTest.APP_URL>APP_URL</RestTest.APP_URL>
                        <RestTest.USER>USER</RestTest.USER>
                        <RestTest.PASSWORD>PASSWORD</RestTest.PASSWORD>
                    </systemPropertyVariables>-->
                    <argLine>${coverageAgent}</argLine>
                    <skipTests>${skipTests}</skipTests>
                    <skipITs>${skipITs}</skipITs>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*IT.class</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.6.2.201302030002</version>
                <configuration>
                    <propertyName>coverageAgent</propertyName>
                    <append>true</append>
                    <destFile>${pathToCoverageDump}</destFile>
                    <!--<includes>
                        Include classes to analyse here, worked bad for me (i mean as docs say, only * and ? wildcards are supported)
                    </includes>-->
                </configuration>
                <executions>
                    <execution>
                        <id>prepare</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.0.2.v20130417</version>
                <executions>
                    <execution>
                        <id>start_jetty</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run-forked</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop_after</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmArgs>${coverageAgent}</jvmArgs>
                    <waitForChild>false</waitForChild>
                    <contextPath>/app-web</contextPath>
                    <stopKey>STOPIT</stopKey>
                    <stopPort>13083</stopPort>
                    <webXml>${basedir}/</webXml>
                </configuration>
            </plugin>

        </plugins>
    </build>


</project>
